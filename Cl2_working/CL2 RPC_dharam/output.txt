/*
	Assignment No 4
	Roll No 4117
	Remote Procedure Call (RPC)
*/



============= sqr1.x file ====================

program SQRPROG {
    version SQRVERS {
        double square(double num) = 23;
    } = 1;
} = 22855;


============= client1.c file ================

#include "sqr1.h"
#include <stdlib.h>

void squareprog_1( char* host, int argc, char *argv[])
{
   CLIENT *clnt;
   double  *result_1, f;
      char *endptr;
      
   f = strtod(argv[2],&endptr);
        printf("value input  = %e\n",f);
	//num = f;
   clnt = clnt_create(host, SQRPROG, 
	SQRVERS, "udp");
   if (clnt == NULL) {
      clnt_pcreateerror(host);
      exit(1);
   }
	result_1 = (double*)malloc(sizeof(double));
   result_1 = square_1(&f, clnt);
   
   clnt_destroy( clnt );
      printf("Square = %e\n",*result_1);
}


main( int argc, char* argv[] )
{
   char *host;

   if(argc != 3){
	printf("\n\nSorry invalid number of arguments");	
	}

   host = argv[1];
   squareprog_1( host, argc, argv);
}


================ server1.c file ======================

#include <rpc/rpc.h>
#include "sqr1.h"
#include <stdio.h>

static double *sqr;

double* square_1(double *input,
   CLIENT *client) {
	sqr = (double*)malloc(sizeof(double));
    *sqr = ((*input) * (*input));
  
  return(sqr);
}

double* square_1_svc(double *input,
   struct svc_req *svc) {
  CLIENT *client;
  return(square_1(input,client));
}



===========OUTPUT===================

Server Side :

[root@ws203-011 CL_2_RPC]# cc server1.c sqr1_svc.c -o server1
[root@ws203-011 CL_2_RPC]# ./server1
[root@ws203-011 CL_2_RPC]#

Client Side :

[oslab@ws203-011 CL_2_RPC]$ rpcgen sqr1.x
[oslab@ws203-011 CL_2_RPC]$ cc client1.c sqr1_clnt.c -o client1
[oslab@ws203-011 CL_2_RPC]$ ./client1 127.0.0.1 5
value input  = 5.000000e+00
Square = 2.500000e+01
[oslab@ws203-011 CL_2_RPC]$ 

